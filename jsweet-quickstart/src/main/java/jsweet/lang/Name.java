package jsweet.lang;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * This annotation allows the definition of a name that will be used for the
 * final generated code (rather than the Java name).
 * 
 * <p>
 * This needs to be used when the name of an element is not a valid Java
 * identifier. By convention, JSweet implements a built-in convention to save
 * the use of @Name annotations:
 * 
 * <ul>
 * <li>Convention: <code>Keyword</code> in Java transpiles to
 * <code>keyword</code>, when keyword is a Java keyword (such as catch, finaly,
 * int, long, and so forth)</li>
 * </ul>
 * 
 * @author Renaud Pawlak
 */
@Retention(RetentionPolicy.RUNTIME)
@Target({ ElementType.TYPE, ElementType.CONSTRUCTOR, ElementType.FIELD, ElementType.METHOD, ElementType.PACKAGE })
public @interface Name {

	/**
	 * The name that will be generated by the transpiler in place of the
	 * annotated element Java name.
	 */
	java.lang.String value();

}
