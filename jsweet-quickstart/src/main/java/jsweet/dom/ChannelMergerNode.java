package jsweet.dom;
/**  <div> <p>The <code>ChannelMergerNode</code> interface, often used in conjunction with its opposite, <code>ChannelSplitterNode</code>, reunites different mono inputs into a single output. Each input is used to fill a channel of the output. This is useful for accessing each channels separately, e.g. for performing channel mixing where gain must be separately controlled on each channel.</p> </div> <p><img></img></p> <p>If <code>ChannelMergerNode</code> has one single output, but as many inputs as there are channels to merge; the amount of inputs is defined as a parameter of its constructor and the call to <code>AudioContext.createChannelMerger</code>. In the case that no value is given, it will default to <code>6</code>.</p> <p>Using a <code>ChannelMergerNode</code>, it is possible to create outputs with more channels than the rendering hardware is able to process. In that case, when the signal is sent to the <code>AudioContext.listener</code> object, supernumerary channels will be ignored.</p> <table> <tbody> <tr> <th>Number of inputs</th> <td>variable; default to <code>6</code>.</td> </tr> <tr> <th>Number of outputs</th> <td><code>1</code></td> </tr> <tr> <th>Channel count mode</th> <td><code>&quot;max&quot;</code></td> </tr> <tr> <th>Channel count</th> <td><code>2 </code>(not used in the default count mode)</td> </tr> <tr> <th>Channel interpretation</th> <td><code>&quot;speakers&quot;</code></td> </tr> </tbody> </table>  */
public class ChannelMergerNode extends AudioNode {
    public static ChannelMergerNode prototype;
    public ChannelMergerNode(){}
}

